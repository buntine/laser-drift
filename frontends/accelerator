#! /usr/bin/env python

import time
import curses

CONTENT = "  %s  "
MAX_SPEED = 15

def init_gradient():
    gradient = [48, 47, 82, 118, 154, 190, 220, 208, 202, 196, 160, 124, 88, 88, 52, 52]

    for i, c in enumerate(gradient):
        curses.init_pair(i + 1, 0, c)

def set_background(stdscr):
    curses.init_pair(17, 0, 236)
    stdscr.bkgdset(" ", curses.color_pair(17))

def draw_block(stdscr, x, y, speed):
    for l in range(0, 3):
        content = CONTENT % ((str(speed + 1).rjust(2, "0")) if l == 1 else "  ")

        stdscr.addstr(y + l,
                      x + (speed * len(CONTENT)),
                      content,
                      curses.color_pair(speed + 1))

def visualize(stdscr, x, y, speed):
    stdscr.clear()

    for n in range(0, speed):
        draw_block(stdscr, x, y, n)

def main(stdscr):
    init_gradient()
    set_background(stdscr)

    stdscr.clear()

    x = int(curses.COLS / 2) - (int(len(CONTENT)) * 8)
    y = int(curses.LINES / 2) - 1
    state = {
        "started": False,
        "speed": 0,
        "lanechange": False,
    }

    while True:
        ch = stdscr.getch()

        if ch == 113: # q
            break
        elif ch == curses.KEY_UP and state["speed"] <= MAX_SPEED:
            state["speed"] += 1
        elif ch == curses.KEY_DOWN and state["speed"] > 0:
            state["speed"] -= 1

        visualize(stdscr, x, y, state["speed"])

curses.wrapper(main)
