#! /usr/bin/env python

import time
import curses

"""A curses GUI for controlling and vizualizing a slotcar via Laser Drift."""

BLOCKSIZE = 6
MAX_SPEED = 15

def init_gradient():
    gradient = [48, 47, 82, 118, 154, 190, 220, 208, 202, 196, 160, 124, 88, 88, 52, 52]

    for i, c in enumerate(gradient):
        curses.init_pair(i + 1, 232, c)

def set_background(stdscr):
    curses.init_pair(17, 0, 236)
    stdscr.bkgdset(" ", curses.color_pair(17))

def block(stdscr, x, y, n, speed):
    """Render a block to the window..."""
    for l in range(0, 3):
        if n == speed and l == 1:
            content = str(n + 1).zfill(2)
        else:
            content = ""

        color = curses.color_pair(18 if n > speed else (n + 1))

        stdscr.addstr(y + l,
                      x + (n * BLOCKSIZE),
                      content.center(BLOCKSIZE),
                      color)
def toggle(stdscr, x, y, name, on=False):
    """Render an on/off toggle to the window."""
    for n in range(0, 3):
        stdscr.addstr(y + n, x, "".rjust(BLOCKSIZE * 2), curses.color_pair(18))

    for n in range(0, 3):
        content = name if n == 1 else ""
        offset = BLOCKSIZE if on else 0
        stdscr.addstr(y + n, x + offset, content.center(BLOCKSIZE), curses.color_pair(19))

def render(stdscr, x, y, state):
    stdscr.clear()

    for n in range(0, MAX_SPEED + 1):
        block(stdscr, x, y, n, state["speed"])

    toggle(stdscr, x, y + 5, "RACE", state["started"])
    toggle(stdscr, x + 16, y + 5, "LC", state["lanechange"])

def main(stdscr):
    init_gradient()
    set_background(stdscr)

    curses.curs_set(0)
    curses.init_pair(18, 0, 246)
    curses.init_pair(19, 0, 254)

    stdscr.clear()

    x = int(curses.COLS / 2) - (BLOCKSIZE * 8)
    y = int(curses.LINES / 2) - 1
    state = {
        "started": False,
        "speed": 0,
        "lanechange": False,
    }

    render(stdscr, x, y, state)

    while True:
        ch = stdscr.getch()

        if ch == 113: # q
            break
        elif ch == curses.KEY_UP and state["speed"] < MAX_SPEED:
            state["speed"] += 1
        elif ch == curses.KEY_DOWN and state["speed"] > 0:
            state["speed"] -= 1
        elif ch > 48 and ch < 58: # 1 - 9
            state["speed"] = ch - 49
        elif ch > 96 and ch < 103: # a - f
            state["speed"] = ch - 87
        elif ch == 48: # 0
            state["speed"] = 9
        elif ch == 10: # ENTER
            state["started"] = not state["started"]
        elif ch == 32: # SPACE
            state["lanechange"] = not state["lanechange"]

        render(stdscr, x, y, state)

curses.wrapper(main)
